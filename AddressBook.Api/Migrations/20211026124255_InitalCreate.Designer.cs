// <auto-generated />
using AddressBook.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AddressBook.Api.Migrations
{
    [DbContext(typeof(AddressDbContext))]
    [Migration("20211026124255_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AddressBook.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuburbID")
                        .HasColumnType("int");

                    b.HasKey("CityID");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            CityName = "Port Elizabeth",
                            SuburbID = 1
                        },
                        new
                        {
                            CityID = 2,
                            CityName = "Durban",
                            SuburbID = 2
                        });
                });

            modelBuilder.Entity("AddressBook.Models.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinceID")
                        .HasColumnType("int");

                    b.HasKey("CountryID");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryID = 1,
                            CountryName = "South Africa",
                            ProvinceID = 1
                        });
                });

            modelBuilder.Entity("AddressBook.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonID");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            Email = "khanyisoluzipo@gmail.com",
                            FirstName = "Khanyiso",
                            LastName = "Luzipo",
                            PhoneNumber = "063270866"
                        },
                        new
                        {
                            PersonID = 2,
                            Email = "nelisamandla@gmail.com",
                            FirstName = "Nelisa",
                            LastName = "Mandla",
                            PhoneNumber = "06798640938"
                        });
                });

            modelBuilder.Entity("AddressBook.Models.Province", b =>
                {
                    b.Property<int>("ProvinceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvinceID");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            ProvinceID = 1,
                            CityID = 1,
                            Name = "Eastern Cape"
                        },
                        new
                        {
                            ProvinceID = 2,
                            CityID = 2,
                            Name = "KwaZulu-Natal"
                        });
                });

            modelBuilder.Entity("AddressBook.Models.Suburb", b =>
                {
                    b.Property<int>("SuburbID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonID")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuburbID");

                    b.ToTable("Suburb");

                    b.HasData(
                        new
                        {
                            SuburbID = 1,
                            AddressLine1 = "2521 Aso Road",
                            AddressLine2 = "Meke",
                            PersonID = 1,
                            PostalCode = "6205",
                            StreetName = "Kwazakhele"
                        },
                        new
                        {
                            SuburbID = 2,
                            AddressLine1 = "123 ASP Road",
                            AddressLine2 = "1 Avenue",
                            PersonID = 2,
                            PostalCode = "6200",
                            StreetName = "Newton Park"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
